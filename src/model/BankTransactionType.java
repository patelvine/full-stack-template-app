//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.10.25 at 11:30:02 AM PDT 
//


package model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for bankTransactionType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="bankTransactionType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token">
 *     &lt;enumeration value="SPEND"/>
 *     &lt;enumeration value="RECEIVE"/>
 *     &lt;enumeration value="RECEIVE-OVERPAYMENT"/>
 *     &lt;enumeration value="RECEIVE-PREPAYMENT"/>
 *     &lt;enumeration value="SPEND-OVERPAYMENT"/>
 *     &lt;enumeration value="SPEND-PREPAYMENT"/>
 *     &lt;enumeration value="RECEIVE-TRANSFER"/>
 *     &lt;enumeration value="SPEND-TRANSFER"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "bankTransactionType")
@XmlEnum
public enum BankTransactionType {

    SPEND("SPEND"),
    RECEIVE("RECEIVE"),
    @XmlEnumValue("RECEIVE-OVERPAYMENT")
    RECEIVE_OVERPAYMENT("RECEIVE-OVERPAYMENT"),
    @XmlEnumValue("RECEIVE-PREPAYMENT")
    RECEIVE_PREPAYMENT("RECEIVE-PREPAYMENT"),
    @XmlEnumValue("SPEND-OVERPAYMENT")
    SPEND_OVERPAYMENT("SPEND-OVERPAYMENT"),
    @XmlEnumValue("SPEND-PREPAYMENT")
    SPEND_PREPAYMENT("SPEND-PREPAYMENT"),
    @XmlEnumValue("RECEIVE-TRANSFER")
    RECEIVE_TRANSFER("RECEIVE-TRANSFER"),
    @XmlEnumValue("SPEND-TRANSFER")
    SPEND_TRANSFER("SPEND-TRANSFER");
    private final String value;

    BankTransactionType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static BankTransactionType fromValue(String v) {
        for (BankTransactionType c: BankTransactionType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
